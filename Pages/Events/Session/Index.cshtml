@page
@model LAE.Pages.Events.Events.IndexModel
@using LostArkEng.Models

@{
    ViewData["Title"] = "Index";
}
@if (Model.LoggedInUser != null)
{

    <p>
        <a asp-page="Create">Create New</a>
    </p>
    <br />
    <span>Last Refresh(Server Time): @Model.ServerTime</span>
    <table class="table text-center" id="EventTable" style="width: 100%">
        <thead>
            <tr>
                <th>Event</th>
                <th>GS</th>
                <th class="d-none d-sm-none d-md-table-cell">Leader</th>
                <th class="d-none d-sm-none d-md-table-cell">Spots</th>
                <th>
                    Starts
                </th>
                <th>
                    Server
                </th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model.PartyInfo)
            {
                <form method="post">
                    <tr>
                        <td style="width: 100px">
                            <a asp-page="./Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Activity.Name)</a>
                        </td>
                        <td style="width: 25px">
                            @Html.DisplayFor(modelItem => item.Activity.MinGearScore)
                        </td>
                        <td class="d-none d-sm-table-cell">
                            <a asp-page="../../Account/Profile/Details" asp-route-id="@item.CreatedBy.Id"><img class="imgHoverHighlight" src="\Images\classes\@(item.CreatedBy.GetClassIcon(item.CreatedBy.CharClass)).png" title="@item.CreatedBy.DisplayName" /></a>
                        </td>
                        <td class="width: 100px">
                            @item.PartyMembers / @item.PartySize
                        </td>
                        <td style="display:none;">
                            @Model.ConvertTime(item.StartingTime);
                            @*@item.StartingTime*@
                        </td>
                        <td>
                        </td>
                        <td style="width: 35px">
                            @Html.DisplayFor(modelItem => item.ServerName)
                        </td>
                        <td>
                            @if ((@item.PartyMembers < @item.PartySize) & item.CreatedBy.DiscordName != @Model.LoggedInUser.DiscordName & item.Members.Where(w => w.PartyId == item.Id).Select(w => w.PartyName).ToList().Contains(Model.LoggedInUser) == false)
                            {
                                <input type="submit" asp-page-handler="JoinTeam" asp-route-id="@item.Id" asp-route-remaining="(@item.PartySize - @item.PartyMembers)" asp-route-option="Join" value="Join" class="btn btn-primary width125" />
                            }
                            else if ((@item.PartyMembers < @item.PartySize) & item.CreatedBy.DiscordName != @Model.LoggedInUser.DiscordName & item.Members.Select(w => w.PartyName == @Model.LoggedInUser).FirstOrDefault() == true)
                            {
                                <input type="submit" asp-page-handler="JoinTeam" asp-route-id="@item.Id" asp-route-remaining="(@item.PartySize - @item.PartyMembers)" asp-route-option="Leave" value="Leave" class="btn btn-danger width125" />
                            }
                            else if (item.CreatedBy.DiscordName == @Model.LoggedInUser.DiscordName)
                            {
                                <a class="btn btn-danger width125" asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                            }
                        </td>
                    </tr>
                </form>
            }
        </tbody>
    </table>
}
else
{
    <h3>You are not logged in!</h3>
}

<script>

    setTimeout(function () {
        location.reload();
    }, 15000);

    var table = document.getElementById("EventTable");

    window.setInterval(function () {

        for (var i = 1, row; row = table.rows[i]; i++) {

            var endDate = row.cells[4];
            countDownDate = new Date(endDate.innerHTML.replace(/-/g, "/")).getTime();
            var countDown = row.cells[5];

            var utcDate = new Date();
            utcDate.toUTCString();

            var now = new Date(utcDate.getUTCFullYear(), utcDate.getUTCMonth(), utcDate.getUTCDate(), utcDate.getUTCHours(), utcDate.getUTCMinutes(), utcDate.getUTCSeconds());

            now = now.getTime();
            //var now = new Date().getTime();

            var distance = countDownDate - now;

            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);


            if (seconds < 10) {
                seconds = "0" + seconds;
            }

            if (minutes < 10) {
                minutes = "0" + minutes;
            }

            if (days === 0) {
                countDown.innerHTML = (hours + ":"
                    + minutes + ":" + seconds);
            } else if (days > 0) {
                if (days == 1) {
                    countDown.innerHTML = (days + " day");
                }
                countDown.innerHTML = (days + " days");
            } else {
                clearInterval();
                countDown.innerHTML = "Event Over";
            }
        }
    }, 1000)
</script>

